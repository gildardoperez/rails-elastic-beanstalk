Resources:
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["<bucket>"]
          roleName: "<role-name>"

files:
  # Pull configuration files from S3
  /tmp/database.yml:
    mode: "000644"
    owner: webapp
    group: webapp
    authentication: "S3Auth"
    source: https://s3-<region>.amazonaws.com/<bucket>/database.yml

  /tmp/application.yml:
    mode: "000644"
    owner: webapp
    group: webapp
    authentication: "S3Auth"
    source: https://s3-<region>.amazonaws.com/<bucket>/application.yml

  /tmp/secrets.yml:
    mode: "000644"
    owner: webapp
    group: webapp
    authentication: "S3Auth"
    source: https://s3-<region>.amazonaws.com/<bucket>/secrets.yml

  # SSL Cert
  /etc/nginx/ssl/ssl_cert.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-<region>.amazonaws.com/<bucket>/ssl_cert.key


  /etc/nginx/ssl/ssl_cert.crt:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-<region>.amazonaws.com/<bucket>/ssl_cert.crt

  # Move files into the rails directory after initial setup
  /opt/elasticbeanstalk/hooks/appdeploy/pre/05_db_config_file.sh:
    owner: root
    group: root
    mode: "000755"
    content: |
      #! /bin/bash

      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)

      mv /tmp/database.yml $EB_APP_STAGING_DIR/config/database.yml
      mv /tmp/application.yml $EB_APP_STAGING_DIR/config/application.yml
      mv /tmp/secrets.yml $EB_APP_STAGING_DIR/config/secrets.yml

  # Adds shell script for creating new Diffie-Hellman parameters when building new instances
  /opt/elasticbeanstalk/hooks/appdeploy/pre/00_dhparam.sh:
    owner: root
    group: root
    mode: "000755"
    content: |
      #!/usr/bin/env bash
      set -xe
      if [ ! -f /etc/nginx/ssl/dhparam.pem ]; then
       echo "$(date) dhparam.pem not found, creating..." >> /var/log/dhparam.log
       openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
       chmod 400 /etc/nginx/ssl/dhparam.pem
      else
       echo "$(date) dhparam.pem found, skipping..." >> /var/log/dhparam.log
      fi

  # Adds a shell script for creating the database if it does not exist already
  /opt/elasticbeanstalk/hooks/appdeploy/pre/12_db_creation.sh:
    owner: root
    group: root
    mode: "000755"
    content: |
      #!/usr/bin/env bash

      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

      . $EB_SUPPORT_DIR/envvars
      . $EB_SCRIPT_DIR/use-app-ruby.sh

      cd $EB_APP_STAGING_DIR
      su -s /bin/bash -c "leader_only bundle exec rake db:create" $EB_APP_USER

container_commands:
    # Command to restart nginx when application configuration changes are made
    00delete_webapp_healthd:
      command: "rm -rf /etc/nginx/conf.d/webapp_healthd.conf"
    00delete_webapp:
      command: "rm -rf /etc/nginx/conf.d/webapp.conf"
    01restart_nginx:
      command: "service nginx restart"